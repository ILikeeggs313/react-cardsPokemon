{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n//since we just implement a basic flip, we just implement initial state and useState\n\nconst useFlip = function () {\n  _s();\n  let initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const [isFlip, setIsFlip] = useState(initialState);\n  const flipCard = () => {\n    setIsFlip(isUp => !isUp);\n  };\n  return [isFlip, flipCard];\n};\n_s(useFlip, \"taB2KdF0CM4dgS+Nkz0qqdWgNXA=\");\nexport default useFlip;","map":{"version":3,"names":["React","useState","useFlip","_s","initialState","arguments","length","undefined","isFlip","setIsFlip","flipCard","isUp"],"sources":["/Users/anhnguyen/Downloads/react-cards-pokemon/src/hooks/useFlip.js"],"sourcesContent":["import React, {useState} from \"react\";\n\n//since we just implement a basic flip, we just implement initial state and useState\n\nconst useFlip = (initialState = true) => {\n    const [isFlip, setIsFlip] = useState(initialState);\n    const flipCard = () => {\n        setIsFlip(isUp => !isUp);\n        };\n    return [isFlip, flipCard];\n}\n\nexport default useFlip;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;;AAErC;;AAEA,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAyB;EAAAC,EAAA;EAAA,IAAxBC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAChC,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAACG,YAAY,CAAC;EAClD,MAAMM,QAAQ,GAAGA,CAAA,KAAM;IACnBD,SAAS,CAACE,IAAI,IAAI,CAACA,IAAI,CAAC;EACxB,CAAC;EACL,OAAO,CAACH,MAAM,EAAEE,QAAQ,CAAC;AAC7B,CAAC;AAAAP,EAAA,CANKD,OAAO;AAQb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}